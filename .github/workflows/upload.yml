name: Build and Upload

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/*'
      - 'include/*'
      - 'test/*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  WIFI_SSID: ${{ secrets.WIFI_SSID }}
  WIFI_PASS: ${{ secrets.WIFI_PASS }}
  MQTT_USER: ${{ secrets.MQTT_USER }}
  MQTT_PASS: ${{ secrets.MQTT_PASS }}
  MQTT_SERV: ${{ secrets.MQTT_SERV }}
  ESP32_ID1: ${{ secrets.ESP32_ID1 }}
  ESP32_IP1: ${{ secrets.ESP32_IP1 }}
  VERSION: $(awk '/#define FIRMWARE_VERSION/ {print $NF}' ./include/param.hpp)

jobs:
  build:
    name: "Build-Test-Upload"
    runs-on: self-hosted    
    steps:    
      - uses: actions/checkout@v3
      - name: "unit tests"
        run: |
          pio test -vv
      - name: "Set firmware version"
        run: |
          echo "VERSION=${{ env.VERSION }}"
      - name: "build firmware"
        run: |
          pio run --target upload --environment nodemcu-32s
          cp .pio/build/nodemcu-32s/firmware.bin /home/runner/firmware/update/firmware-${{ env.VERSION }}.bin
          echo "Firmware.bin compilado y copiado a /home/runner/firmware/update"
          cp /home/runner/firmware/update/update.json update.json
          jq --argjson version_arg "$VERSION" '.version |= $version_arg | .version |= tonumber' update.json > tmp && mv tmp update.json
          cp update.json /home/runner/firmware/update/update.json
          echo "update.json actualizado con la ultima version: ${{ env.VERSION }}"
